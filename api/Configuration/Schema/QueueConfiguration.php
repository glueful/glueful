<?php

declare(strict_types=1);

namespace Glueful\Configuration\Schema;

use Symfony\Component\Config\Definition\Builder\TreeBuilder;

/**
 * Queue Configuration Schema
 *
 * Defines validation rules and structure for queue configuration including
 * connections, workers, monitoring, batching, and performance settings.
 *
 * @package Glueful\Configuration\Schema
 */
class QueueConfiguration implements ConfigurationInterface
{
    public function getConfigTreeBuilder(): TreeBuilder
    {
        $treeBuilder = new TreeBuilder('queue');
        $rootNode = $treeBuilder->getRootNode();

        // @phpstan-ignore-next-line TreeBuilder root nodes are ArrayNodeDefinitions in practice
        $rootNode
            ->children()
                ->enumNode('default')
                    ->values(['database', 'redis', 'sync', 'null'])
                    ->defaultValue('database')
                    ->info('Default queue connection')
                ->end()
                ->arrayNode('connections')
                    ->addDefaultsIfNotSet()
                    ->children()
                        ->arrayNode('database')
                            ->addDefaultsIfNotSet()
                            ->children()
                                ->scalarNode('driver')
                                    ->defaultValue('database')
                                ->end()
                                ->scalarNode('table')
                                    ->defaultValue('queue_jobs')
                                    ->info('Jobs table name')
                                ->end()
                                ->scalarNode('queue')
                                    ->defaultValue('default')
                                    ->info('Default queue name')
                                ->end()
                                ->integerNode('retry_after')
                                    ->min(1)
                                    ->defaultValue(90)
                                    ->info('Retry after seconds')
                                ->end()
                                ->booleanNode('after_commit')
                                    ->defaultFalse()
                                    ->info('Dispatch after database commit')
                                ->end()
                                ->scalarNode('failed_table')
                                    ->defaultValue('queue_failed_jobs')
                                    ->info('Failed jobs table name')
                                ->end()
                            ->end()
                        ->end()
                        ->arrayNode('redis')
                            ->addDefaultsIfNotSet()
                            ->children()
                                ->scalarNode('driver')
                                    ->defaultValue('redis')
                                ->end()
                                ->scalarNode('host')
                                    ->defaultValue('127.0.0.1')
                                    ->info('Redis host')
                                ->end()
                                ->integerNode('port')
                                    ->min(1)
                                    ->max(65535)
                                    ->defaultValue(6379)
                                    ->info('Redis port')
                                ->end()
                                ->scalarNode('password')
                                    ->defaultNull()
                                    ->info('Redis password')
                                ->end()
                                ->integerNode('database')
                                    ->min(0)
                                    ->defaultValue(0)
                                    ->info('Redis database number')
                                ->end()
                                ->integerNode('timeout')
                                    ->min(1)
                                    ->defaultValue(5)
                                    ->info('Connection timeout')
                                ->end()
                                ->booleanNode('persistent')
                                    ->defaultFalse()
                                    ->info('Use persistent connection')
                                ->end()
                                ->scalarNode('prefix')
                                    ->defaultValue('glueful:queue:')
                                    ->info('Queue key prefix')
                                ->end()
                                ->scalarNode('queue')
                                    ->defaultValue('default')
                                    ->info('Default queue name')
                                ->end()
                                ->integerNode('retry_after')
                                    ->min(1)
                                    ->defaultValue(90)
                                    ->info('Retry after seconds')
                                ->end()
                                ->scalarNode('block_for')
                                    ->defaultNull()
                                    ->info('Block for timeout')
                                ->end()
                                ->integerNode('job_expiration')
                                    ->min(1)
                                    ->defaultValue(3600)
                                    ->info('Job expiration in seconds')
                                ->end()
                            ->end()
                        ->end()
                        ->arrayNode('sync')
                            ->addDefaultsIfNotSet()
                            ->children()
                                ->scalarNode('driver')
                                    ->defaultValue('sync')
                                ->end()
                            ->end()
                        ->end()
                        ->arrayNode('null')
                            ->addDefaultsIfNotSet()
                            ->children()
                                ->scalarNode('driver')
                                    ->defaultValue('null')
                                ->end()
                            ->end()
                        ->end()
                    ->end()
                ->end()
                ->arrayNode('failed')
                    ->addDefaultsIfNotSet()
                    ->children()
                        ->enumNode('driver')
                            ->values(['database', 'file', 'null'])
                            ->defaultValue('database')
                            ->info('Failed jobs driver')
                        ->end()
                        ->scalarNode('database')
                            ->defaultValue('default')
                            ->info('Database connection for failed jobs')
                        ->end()
                        ->scalarNode('table')
                            ->defaultValue('queue_failed_jobs')
                            ->info('Failed jobs table')
                        ->end()
                        ->integerNode('max_retries')
                            ->min(0)
                            ->defaultValue(5)
                            ->info('Maximum retry attempts')
                        ->end()
                        ->integerNode('retention_days')
                            ->min(1)
                            ->defaultValue(30)
                            ->info('Days to retain failed jobs')
                        ->end()
                    ->end()
                ->end()
                ->arrayNode('batching')
                    ->addDefaultsIfNotSet()
                    ->children()
                        ->scalarNode('database')
                            ->defaultValue('default')
                            ->info('Database connection for batches')
                        ->end()
                        ->scalarNode('table')
                            ->defaultValue('queue_batches')
                            ->info('Batches table name')
                        ->end()
                        ->integerNode('cleanup_after_days')
                            ->min(1)
                            ->defaultValue(7)
                            ->info('Days to retain completed batches')
                        ->end()
                    ->end()
                ->end()
                ->arrayNode('monitoring')
                    ->addDefaultsIfNotSet()
                    ->children()
                        ->booleanNode('enabled')
                            ->defaultTrue()
                            ->info('Enable queue monitoring')
                        ->end()
                        ->integerNode('metrics_retention_days')
                            ->min(1)
                            ->defaultValue(30)
                            ->info('Days to retain metrics')
                        ->end()
                        ->integerNode('worker_heartbeat_timeout')
                            ->min(1)
                            ->defaultValue(120)
                            ->info('Worker heartbeat timeout in seconds')
                        ->end()
                        ->arrayNode('alert_rules')
                            ->arrayPrototype()
                                ->children()
                                    ->scalarNode('name')
                                        ->isRequired()
                                        ->cannotBeEmpty()
                                        ->info('Alert rule name')
                                    ->end()
                                    ->scalarNode('queue')
                                        ->defaultValue('*')
                                        ->info('Queue to monitor (* for all)')
                                    ->end()
                                    ->enumNode('condition')
                                        ->values([
                                            'failure_rate_above',
                                            'queue_size_above',
                                            'active_workers_below',
                                            'avg_processing_time_above'
                                        ])
                                        ->isRequired()
                                        ->info('Alert condition')
                                    ->end()
                                    ->variableNode('threshold')
                                        ->isRequired()
                                        ->info('Alert threshold value')
                                    ->end()
                                    ->scalarNode('period')
                                        ->isRequired()
                                        ->info('Time period to evaluate')
                                    ->end()
                                    ->enumNode('severity')
                                        ->values(['info', 'warning', 'critical'])
                                        ->defaultValue('warning')
                                        ->info('Alert severity')
                                    ->end()
                                    ->integerNode('cooldown')
                                        ->min(0)
                                        ->defaultValue(900)
                                        ->info('Cooldown period in seconds')
                                    ->end()
                                    ->booleanNode('enabled')
                                        ->defaultTrue()
                                        ->info('Enable this alert rule')
                                    ->end()
                                ->end()
                            ->end()
                        ->end()
                        ->arrayNode('notification_channels')
                            ->addDefaultsIfNotSet()
                            ->children()
                                ->arrayNode('email')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->booleanNode('enabled')
                                            ->defaultFalse()
                                            ->info('Enable email notifications')
                                        ->end()
                                        ->scalarNode('to')
                                            ->defaultValue('admin@example.com')
                                            ->info('Email recipient')
                                        ->end()
                                        ->scalarNode('from')
                                            ->defaultValue('queue@example.com')
                                            ->info('Email sender')
                                        ->end()
                                    ->end()
                                ->end()
                                ->arrayNode('webhook')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->booleanNode('enabled')
                                            ->defaultFalse()
                                            ->info('Enable webhook notifications')
                                        ->end()
                                        ->scalarNode('url')
                                            ->defaultNull()
                                            ->info('Webhook URL')
                                        ->end()
                                        ->scalarNode('secret')
                                            ->defaultNull()
                                            ->info('Webhook secret')
                                        ->end()
                                    ->end()
                                ->end()
                                ->arrayNode('log')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->booleanNode('enabled')
                                            ->defaultTrue()
                                            ->info('Enable log notifications')
                                        ->end()
                                        ->enumNode('level')
                                            ->values(['debug', 'info', 'warning', 'error'])
                                            ->defaultValue('warning')
                                            ->info('Log level')
                                        ->end()
                                        ->scalarNode('channel')
                                            ->defaultValue('queue')
                                            ->info('Log channel')
                                        ->end()
                                    ->end()
                                ->end()
                            ->end()
                        ->end()
                    ->end()
                ->end()
                ->arrayNode('workers')
                    ->addDefaultsIfNotSet()
                    ->children()
                        ->arrayNode('process')
                            ->addDefaultsIfNotSet()
                            ->children()
                                ->booleanNode('enabled')
                                    ->defaultTrue()
                                    ->info('Enable process management')
                                ->end()
                                ->integerNode('default_workers')
                                    ->min(1)
                                    ->defaultValue(2)
                                    ->info('Default number of workers')
                                ->end()
                                ->integerNode('max_workers_global')
                                    ->min(1)
                                    ->defaultValue(50)
                                    ->info('Global maximum workers')
                                ->end()
                                ->integerNode('max_workers_per_queue')
                                    ->min(1)
                                    ->defaultValue(10)
                                    ->info('Maximum workers per queue')
                                ->end()
                                ->integerNode('restart_delay')
                                    ->min(0)
                                    ->defaultValue(5)
                                    ->info('Restart delay in seconds')
                                ->end()
                                ->integerNode('health_check_interval')
                                    ->min(1)
                                    ->defaultValue(30)
                                    ->info('Health check interval in seconds')
                                ->end()
                                ->integerNode('worker_timeout')
                                    ->min(1)
                                    ->defaultValue(300)
                                    ->info('Worker timeout in seconds')
                                ->end()
                                ->integerNode('graceful_shutdown_timeout')
                                    ->min(1)
                                    ->defaultValue(30)
                                    ->info('Graceful shutdown timeout')
                                ->end()
                                ->integerNode('heartbeat_interval')
                                    ->min(1)
                                    ->defaultValue(15)
                                    ->info('Heartbeat interval in seconds')
                                ->end()
                                ->integerNode('max_restarts_per_hour')
                                    ->min(0)
                                    ->defaultValue(10)
                                    ->info('Maximum restarts per hour')
                                ->end()
                            ->end()
                        ->end()
                        ->arrayNode('auto_scaling')
                            ->addDefaultsIfNotSet()
                            ->children()
                                ->booleanNode('enabled')
                                    ->defaultFalse()
                                    ->info('Enable auto-scaling')
                                ->end()
                                ->integerNode('check_interval')
                                    ->min(1)
                                    ->defaultValue(60)
                                    ->info('Auto-scaling check interval')
                                ->end()
                                ->integerNode('scale_up_threshold')
                                    ->min(0)
                                    ->defaultValue(100)
                                    ->info('Scale up threshold')
                                ->end()
                                ->integerNode('scale_down_threshold')
                                    ->min(0)
                                    ->defaultValue(10)
                                    ->info('Scale down threshold')
                                ->end()
                                ->integerNode('scale_up_step')
                                    ->min(1)
                                    ->defaultValue(2)
                                    ->info('Scale up step')
                                ->end()
                                ->integerNode('scale_down_step')
                                    ->min(1)
                                    ->defaultValue(1)
                                    ->info('Scale down step')
                                ->end()
                                ->integerNode('cooldown_period')
                                    ->min(1)
                                    ->defaultValue(300)
                                    ->info('Cooldown period in seconds')
                                ->end()
                            ->end()
                        ->end()
                        ->arrayNode('queues')
                            ->useAttributeAsKey('name')
                            ->arrayPrototype()
                                ->children()
                                    ->integerNode('workers')
                                        ->min(1)
                                        ->info('Number of workers for this queue')
                                    ->end()
                                    ->integerNode('max_workers')
                                        ->min(1)
                                        ->info('Maximum workers for this queue')
                                    ->end()
                                    ->integerNode('priority')
                                        ->defaultValue(1)
                                        ->info('Queue priority')
                                    ->end()
                                    ->integerNode('memory_limit')
                                        ->min(1)
                                        ->info('Memory limit in MB')
                                    ->end()
                                    ->integerNode('timeout')
                                        ->min(1)
                                        ->info('Job timeout in seconds')
                                    ->end()
                                    ->integerNode('max_jobs')
                                        ->min(1)
                                        ->info('Maximum jobs per worker')
                                    ->end()
                                    ->booleanNode('auto_scale')
                                        ->defaultTrue()
                                        ->info('Enable auto-scaling for this queue')
                                    ->end()
                                ->end()
                            ->end()
                        ->end()
                        ->arrayNode('resource_limits')
                            ->addDefaultsIfNotSet()
                            ->children()
                                ->scalarNode('memory_limit')
                                    ->defaultValue('512M')
                                    ->info('Worker memory limit')
                                ->end()
                                ->integerNode('time_limit')
                                    ->min(1)
                                    ->defaultValue(3600)
                                    ->info('Worker time limit in seconds')
                                ->end()
                                ->integerNode('job_timeout')
                                    ->min(1)
                                    ->defaultValue(300)
                                    ->info('Job timeout in seconds')
                                ->end()
                                ->integerNode('max_jobs_per_worker')
                                    ->min(1)
                                    ->defaultValue(1000)
                                    ->info('Maximum jobs per worker')
                                ->end()
                                ->integerNode('worker_memory_mb')
                                    ->min(1)
                                    ->defaultValue(128)
                                    ->info('Worker memory in MB')
                                ->end()
                                ->integerNode('worker_cpu_percent')
                                    ->min(1)
                                    ->max(100)
                                    ->defaultValue(10)
                                    ->info('Worker CPU usage percentage')
                                ->end()
                            ->end()
                        ->end()
                        ->arrayNode('performance')
                            ->addDefaultsIfNotSet()
                            ->children()
                                ->integerNode('sleep_seconds')
                                    ->min(0)
                                    ->defaultValue(3)
                                    ->info('Worker sleep time in seconds')
                                ->end()
                                ->integerNode('max_tries')
                                    ->min(1)
                                    ->defaultValue(3)
                                    ->info('Maximum job retry attempts')
                                ->end()
                                ->enumNode('backoff_strategy')
                                    ->values(['linear', 'exponential', 'fixed'])
                                    ->defaultValue('exponential')
                                    ->info('Backoff strategy for retries')
                                ->end()
                                ->integerNode('backoff_base')
                                    ->min(1)
                                    ->defaultValue(2)
                                    ->info('Backoff base multiplier')
                                ->end()
                                ->integerNode('max_backoff')
                                    ->min(1)
                                    ->defaultValue(3600)
                                    ->info('Maximum backoff time in seconds')
                                ->end()
                            ->end()
                        ->end()
                    ->end()
                ->end()
                ->arrayNode('performance')
                    ->addDefaultsIfNotSet()
                    ->children()
                        ->arrayNode('connection_pooling')
                            ->addDefaultsIfNotSet()
                            ->children()
                                ->booleanNode('enabled')
                                    ->defaultTrue()
                                    ->info('Enable connection pooling')
                                ->end()
                                ->integerNode('min_connections')
                                    ->min(1)
                                    ->defaultValue(1)
                                    ->info('Minimum connections')
                                ->end()
                                ->integerNode('max_connections')
                                    ->min(1)
                                    ->defaultValue(10)
                                    ->info('Maximum connections')
                                ->end()
                                ->integerNode('idle_timeout')
                                    ->min(1)
                                    ->defaultValue(300)
                                    ->info('Idle timeout in seconds')
                                ->end()
                            ->end()
                        ->end()
                        ->arrayNode('job_priority')
                            ->addDefaultsIfNotSet()
                            ->children()
                                ->booleanNode('enabled')
                                    ->defaultTrue()
                                    ->info('Enable job priority')
                                ->end()
                                ->integerNode('default_priority')
                                    ->defaultValue(0)
                                    ->info('Default job priority')
                                ->end()
                                ->integerNode('high_priority_threshold')
                                    ->defaultValue(100)
                                    ->info('High priority threshold')
                                ->end()
                                ->integerNode('low_priority_threshold')
                                    ->defaultValue(-100)
                                    ->info('Low priority threshold')
                                ->end()
                            ->end()
                        ->end()
                        ->arrayNode('batch_processing')
                            ->addDefaultsIfNotSet()
                            ->children()
                                ->booleanNode('enabled')
                                    ->defaultTrue()
                                    ->info('Enable batch processing')
                                ->end()
                                ->integerNode('batch_size')
                                    ->min(1)
                                    ->defaultValue(100)
                                    ->info('Batch size')
                                ->end()
                                ->integerNode('batch_timeout')
                                    ->min(1)
                                    ->defaultValue(30)
                                    ->info('Batch timeout in seconds')
                                ->end()
                            ->end()
                        ->end()
                        ->arrayNode('compression')
                            ->addDefaultsIfNotSet()
                            ->children()
                                ->booleanNode('enabled')
                                    ->defaultFalse()
                                    ->info('Enable payload compression')
                                ->end()
                                ->enumNode('algorithm')
                                    ->values(['gzip', 'bzip2', 'lz4'])
                                    ->defaultValue('gzip')
                                    ->info('Compression algorithm')
                                ->end()
                                ->integerNode('level')
                                    ->min(1)
                                    ->max(9)
                                    ->defaultValue(6)
                                    ->info('Compression level')
                                ->end()
                                ->integerNode('min_size')
                                    ->min(1)
                                    ->defaultValue(1024)
                                    ->info('Minimum size to compress (bytes)')
                                ->end()
                            ->end()
                        ->end()
                    ->end()
                ->end()
                ->arrayNode('security')
                    ->addDefaultsIfNotSet()
                    ->children()
                        ->arrayNode('encryption')
                            ->addDefaultsIfNotSet()
                            ->children()
                                ->booleanNode('enabled')
                                    ->defaultFalse()
                                    ->info('Enable payload encryption')
                                ->end()
                                ->scalarNode('key')
                                    ->defaultNull()
                                    ->info('Encryption key')
                                ->end()
                                ->scalarNode('cipher')
                                    ->defaultValue('AES-256-CBC')
                                    ->info('Encryption cipher')
                                ->end()
                            ->end()
                        ->end()
                        ->arrayNode('authentication')
                            ->addDefaultsIfNotSet()
                            ->children()
                                ->booleanNode('enabled')
                                    ->defaultFalse()
                                    ->info('Enable authentication')
                                ->end()
                                ->enumNode('driver')
                                    ->values(['token', 'jwt', 'session'])
                                    ->defaultValue('token')
                                    ->info('Authentication driver')
                                ->end()
                                ->scalarNode('token_header')
                                    ->defaultValue('X-Queue-Auth-Token')
                                    ->info('Token header name')
                                ->end()
                                ->scalarNode('token')
                                    ->defaultNull()
                                    ->info('Authentication token')
                                ->end()
                            ->end()
                        ->end()
                        ->arrayNode('rate_limiting')
                            ->addDefaultsIfNotSet()
                            ->children()
                                ->booleanNode('enabled')
                                    ->defaultFalse()
                                    ->info('Enable rate limiting')
                                ->end()
                                ->integerNode('max_jobs_per_minute')
                                    ->min(1)
                                    ->defaultValue(1000)
                                    ->info('Maximum jobs per minute')
                                ->end()
                                ->integerNode('max_jobs_per_hour')
                                    ->min(1)
                                    ->defaultValue(50000)
                                    ->info('Maximum jobs per hour')
                                ->end()
                                ->integerNode('burst_allowance')
                                    ->min(1)
                                    ->defaultValue(100)
                                    ->info('Burst allowance')
                                ->end()
                            ->end()
                        ->end()
                        ->arrayNode('ip_whitelist')
                            ->addDefaultsIfNotSet()
                            ->children()
                                ->booleanNode('enabled')
                                    ->defaultFalse()
                                    ->info('Enable IP whitelist')
                                ->end()
                                ->arrayNode('allowed_ips')
                                    ->scalarPrototype()->end()
                                    ->defaultValue(['127.0.0.1', '::1'])
                                    ->info('Allowed IP addresses')
                                ->end()
                            ->end()
                        ->end()
                    ->end()
                ->end()
                ->arrayNode('development')
                    ->addDefaultsIfNotSet()
                    ->children()
                        ->booleanNode('debug')
                            ->defaultFalse()
                            ->info('Enable debug mode')
                        ->end()
                        ->enumNode('log_level')
                            ->values(['debug', 'info', 'warning', 'error'])
                            ->defaultValue('info')
                            ->info('Log level')
                        ->end()
                        ->booleanNode('query_logging')
                            ->defaultFalse()
                            ->info('Enable query logging')
                        ->end()
                        ->arrayNode('profiling')
                            ->addDefaultsIfNotSet()
                            ->children()
                                ->booleanNode('enabled')
                                    ->defaultFalse()
                                    ->info('Enable profiling')
                                ->end()
                                ->integerNode('slow_job_threshold')
                                    ->min(1)
                                    ->defaultValue(10)
                                    ->info('Slow job threshold in seconds')
                                ->end()
                                ->booleanNode('memory_profiling')
                                    ->defaultFalse()
                                    ->info('Enable memory profiling')
                                ->end()
                            ->end()
                        ->end()
                        ->arrayNode('testing')
                            ->addDefaultsIfNotSet()
                            ->children()
                                ->booleanNode('fake_mode')
                                    ->defaultFalse()
                                    ->info('Enable fake mode for testing')
                                ->end()
                                ->booleanNode('delay_simulation')
                                    ->defaultFalse()
                                    ->info('Simulate processing delays')
                                ->end()
                                ->booleanNode('failure_simulation')
                                    ->defaultFalse()
                                    ->info('Simulate job failures')
                                ->end()
                            ->end()
                        ->end()
                    ->end()
                ->end()
                ->arrayNode('plugins')
                    ->addDefaultsIfNotSet()
                    ->children()
                        ->arrayNode('discovery')
                            ->addDefaultsIfNotSet()
                            ->children()
                                ->booleanNode('enabled')
                                    ->defaultTrue()
                                    ->info('Enable plugin discovery')
                                ->end()
                                ->arrayNode('paths')
                                    ->scalarPrototype()->end()
                                    ->info('Plugin search paths')
                                ->end()
                                ->booleanNode('auto_register')
                                    ->defaultTrue()
                                    ->info('Auto-register discovered plugins')
                                ->end()
                            ->end()
                        ->end()
                        ->arrayNode('validation')
                            ->addDefaultsIfNotSet()
                            ->children()
                                ->booleanNode('strict_mode')
                                    ->defaultTrue()
                                    ->info('Enable strict validation')
                                ->end()
                                ->booleanNode('validate_on_load')
                                    ->defaultTrue()
                                    ->info('Validate on plugin load')
                                ->end()
                            ->end()
                        ->end()
                    ->end()
                ->end()
            ->end()
            ->validate()
                ->ifTrue(function ($v) {
                    return $v['security']['encryption']['enabled'] && empty($v['security']['encryption']['key']);
                })
                ->thenInvalid('Encryption key is required when encryption is enabled')
            ->end()
            ->validate()
                ->ifTrue(function ($v) {
                    return $v['security']['authentication']['enabled'] && empty($v['security']['authentication']['token']);
                })
                ->thenInvalid('Authentication token is required when authentication is enabled')
            ->end();

        return $treeBuilder;
    }

    public function getConfigurationName(): string
    {
        return 'queue';
    }

    public function getDescription(): string
    {
        return 'Queue system configuration including connections, workers, monitoring, and performance settings';
    }

    public function getVersion(): string
    {
        return '1.0.0';
    }
}
