{
    "openapi": "3.0.0",
    "info": {
        "title": "Admin API",
        "description": "API documentation for Admin extension",
        "version": "1.0.0"
    },
    "paths": {
        "/admin/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Admin login",
                "description": "Authenticates an admin user and creates a session",
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "description": "Authentication token"
                                        },
                                        "user": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials"
                    },
                    "429": {
                        "description": "Too many login attempts"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "description": "Admin username"
                                    },
                                    "password": {
                                        "type": "string",
                                        "description": "Admin password"
                                    }
                                },
                                "required": [
                                    "username",
                                    "password"
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/admin/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Admin logout",
                "description": "Ends an admin user session",
                "responses": {
                    "200": {
                        "description": "Logout successful"
                    },
                    "401": {
                        "description": "Not authenticated"
                    }
                }
            }
        },
        "/admin/db/stats": {
            "get": {
                "tags": [
                    "Database"
                ],
                "summary": "Get comprehensive database statistics",
                "description": "Retrieves detailed statistics for all tables in the database including size, schema,",
                "responses": {
                    "200": {
                        "description": "Database statistics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "tables": {
                                            "type": "array"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Permission denied"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/admin/db/tables": {
            "get": {
                "tags": [
                    "Database"
                ],
                "summary": "Get all database tables",
                "description": "Retrieves a list of all tables in the database",
                "responses": {
                    "200": {
                        "description": "List of tables",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "tables": {
                                            "type": "array"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Permission denied"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/admin/db/table/create": {
            "post": {
                "tags": [
                    "Database"
                ],
                "summary": "Create new database table",
                "description": "Creates a new table in the database with specified columns",
                "responses": {
                    "201": {
                        "description": "Table created successfully"
                    },
                    "400": {
                        "description": "Invalid request format"
                    },
                    "403": {
                        "description": "Permission denied"
                    },
                    "409": {
                        "description": "Table already exists"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Table name"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/admin/db/table/drop": {
            "post": {
                "tags": [
                    "Database"
                ],
                "summary": "Drop database table",
                "description": "Deletes a table from the database",
                "responses": {
                    "200": {
                        "description": "Table dropped successfully"
                    },
                    "400": {
                        "description": "Invalid request format or missing confirmation"
                    },
                    "403": {
                        "description": "Permission denied"
                    },
                    "404": {
                        "description": "Table not found"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Table name"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/admin/db/table/size": {
            "get": {
                "tags": [
                    "Database"
                ],
                "summary": "Get database table size",
                "description": "Retrieves the size of the specified table in the database",
                "responses": {
                    "200": {
                        "description": "Table size information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "Table name"
                                        },
                                        "size": {
                                            "type": "string",
                                            "description": "Size (formatted)"
                                        },
                                        "bytes": {
                                            "type": "integer",
                                            "description": "Size in bytes"
                                        },
                                        "rows": {
                                            "type": "integer",
                                            "description": "Row count"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request format"
                    },
                    "403": {
                        "description": "Permission denied"
                    },
                    "404": {
                        "description": "Table not found"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Table name"
                                    }
                                },
                                "required": [
                                    "name"
                                ]
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/admin/db/table/{name}": {
            "get": {
                "tags": [
                    "Database"
                ],
                "summary": "Get table data",
                "description": "Retrieves data from the specified table with pagination",
                "responses": {
                    "200": {
                        "description": "Table data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Permission denied"
                    },
                    "404": {
                        "description": "Table not found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "description": "Table name",
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "/admin/db/table/column/add": {
            "post": {
                "tags": [
                    "Database"
                ],
                "summary": "Add column to table",
                "description": "Adds a new column to an existing database table",
                "responses": {
                    "200": {
                        "description": "Column added successfully"
                    },
                    "400": {
                        "description": "Invalid request format"
                    },
                    "403": {
                        "description": "Permission denied"
                    },
                    "404": {
                        "description": "Table not found"
                    },
                    "409": {
                        "description": "Column already exists"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "table": {
                                        "type": "string",
                                        "description": "Table name"
                                    },
                                    "column": {
                                        "type": "object"
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "Column name"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/admin/db/table/column/drop": {
            "post": {
                "tags": [
                    "Database"
                ],
                "summary": "Drop column from table",
                "description": "Removes a column from an existing database table",
                "responses": {
                    "200": {
                        "description": "Column dropped successfully"
                    },
                    "400": {
                        "description": "Invalid request format or missing confirmation"
                    },
                    "403": {
                        "description": "Permission denied"
                    },
                    "404": {
                        "description": "Table or column not found"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "table": {
                                        "type": "string",
                                        "description": "Table name"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/admin/db/table/index/drop": {
            "post": {
                "tags": [
                    "Database"
                ],
                "summary": "Drop index from table",
                "description": "Removes an index from an existing database table",
                "responses": {
                    "200": {
                        "description": "Index dropped successfully"
                    },
                    "400": {
                        "description": "Invalid request format"
                    },
                    "403": {
                        "description": "Permission denied"
                    },
                    "404": {
                        "description": "Table or index not found"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "table_name": {
                                        "type": "string",
                                        "description": "Table name"
                                    },
                                    "index_name": {
                                        "type": "string",
                                        "description": "Index name"
                                    }
                                },
                                "required": [
                                    "table_name",
                                    "index_name"
                                ]
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/admin/db/table/foreign-key/drop": {
            "post": {
                "tags": [
                    "Database"
                ],
                "summary": "Drop foreign key from table",
                "description": "Removes a foreign key constraint from an existing database table",
                "responses": {
                    "200": {
                        "description": "Foreign key constraint dropped successfully"
                    },
                    "400": {
                        "description": "Invalid request format"
                    },
                    "403": {
                        "description": "Permission denied"
                    },
                    "404": {
                        "description": "Table or constraint not found"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "table_name": {
                                        "type": "string",
                                        "description": "Table name"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/admin/db/table/{name}/columns": {
            "get": {
                "tags": [
                    "Database"
                ],
                "summary": "Get table columns",
                "description": "Retrieves column metadata for a specific table",
                "responses": {
                    "200": {
                        "description": "Table columns",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "table": {
                                            "type": "string",
                                            "description": "Table name"
                                        },
                                        "columns": {
                                            "type": "array"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Permission denied"
                    },
                    "404": {
                        "description": "Table not found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "description": "Table name",
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "/admin/db/table/index/add": {
            "post": {
                "tags": [
                    "Database"
                ],
                "summary": "Add index to table",
                "description": "Adds a new index to an existing database table",
                "responses": {
                    "200": {
                        "description": "Index added successfully"
                    },
                    "400": {
                        "description": "Invalid request format"
                    },
                    "403": {
                        "description": "Permission denied"
                    },
                    "404": {
                        "description": "Table not found"
                    },
                    "409": {
                        "description": "Index already exists"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "table_name": {
                                        "type": "string",
                                        "description": "Table name"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/admin/db/table/foreign-key/add": {
            "post": {
                "tags": [
                    "Database"
                ],
                "summary": "Add foreign key to table",
                "description": "Adds a new foreign key constraint to an existing database table",
                "responses": {
                    "200": {
                        "description": "Foreign key constraint added successfully"
                    },
                    "400": {
                        "description": "Invalid request format"
                    },
                    "403": {
                        "description": "Permission denied"
                    },
                    "404": {
                        "description": "Table not found"
                    },
                    "409": {
                        "description": "Foreign key constraint already exists"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "table_name": {
                                        "type": "string",
                                        "description": "Table name"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/admin/db/table/column/add-batch": {
            "post": {
                "tags": [
                    "Database"
                ],
                "summary": "Add multiple columns to table",
                "description": "Adds multiple columns to an existing database table in a single operation",
                "responses": {
                    "200": {
                        "description": "Columns added successfully"
                    },
                    "400": {
                        "description": "Invalid request format"
                    },
                    "403": {
                        "description": "Permission denied"
                    },
                    "404": {
                        "description": "Table not found"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "table_name": {
                                        "type": "string",
                                        "description": "Table name"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/admin/db/table/column/drop-batch": {
            "post": {
                "tags": [
                    "Database"
                ],
                "summary": "Drop multiple columns from table",
                "description": "Removes multiple columns from an existing database table in a single operation",
                "responses": {
                    "200": {
                        "description": "Columns dropped successfully"
                    },
                    "400": {
                        "description": "Invalid request format"
                    },
                    "403": {
                        "description": "Permission denied"
                    },
                    "404": {
                        "description": "Table or column not found"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "table_name": {
                                        "type": "string",
                                        "description": "Table name"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/admin/db/table/index/drop-batch": {
            "post": {
                "tags": [
                    "Database"
                ],
                "summary": "Drop multiple indexes from table",
                "description": "Removes multiple indexes from an existing database table in a single operation",
                "responses": {
                    "200": {
                        "description": "Indexes dropped successfully"
                    },
                    "400": {
                        "description": "Invalid request format"
                    },
                    "403": {
                        "description": "Permission denied"
                    },
                    "404": {
                        "description": "Table or index not found"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "table_name": {
                                        "type": "string",
                                        "description": "Table name"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/admin/db/table/foreign-key/drop-batch": {
            "post": {
                "tags": [
                    "Database"
                ],
                "summary": "Drop multiple foreign keys from table",
                "description": "Removes multiple foreign key constraints from an existing database table in a single operation",
                "responses": {
                    "200": {
                        "description": "Foreign key constraints dropped successfully"
                    },
                    "400": {
                        "description": "Invalid request format"
                    },
                    "403": {
                        "description": "Permission denied"
                    },
                    "404": {
                        "description": "Table or constraint not found"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "table_name": {
                                        "type": "string",
                                        "description": "Table name"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/admin/db/table/index/add-batch": {
            "post": {
                "tags": [
                    "Database"
                ],
                "summary": "Add multiple indexes to table",
                "description": "Adds multiple indexes to an existing database table in a single operation",
                "responses": {
                    "200": {
                        "description": "Indexes added successfully"
                    },
                    "400": {
                        "description": "Invalid request format"
                    },
                    "403": {
                        "description": "Permission denied"
                    },
                    "404": {
                        "description": "Table not found"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "table_name": {
                                        "type": "string",
                                        "description": "Table name"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/admin/db/table/foreign-key/add-batch": {
            "post": {
                "tags": [
                    "Database"
                ],
                "summary": "Add multiple foreign keys to table",
                "description": "Adds multiple foreign key constraints to an existing database table in a single operation",
                "responses": {
                    "200": {
                        "description": "Foreign key constraints added successfully"
                    },
                    "400": {
                        "description": "Invalid request format"
                    },
                    "403": {
                        "description": "Permission denied"
                    },
                    "404": {
                        "description": "Table not found"
                    },
                    "409": {
                        "description": "Foreign key constraint already exists"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "table_name": {
                                        "type": "string",
                                        "description": "Table name"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/admin/db/table/schema/update": {
            "post": {
                "tags": [
                    "Database"
                ],
                "summary": "Update table schema",
                "description": "Updates table schema with multiple operations including adding/removing columns,",
                "responses": {
                    "200": {
                        "description": "Schema updated successfully"
                    },
                    "400": {
                        "description": "Invalid request format"
                    },
                    "403": {
                        "description": "Permission denied"
                    },
                    "404": {
                        "description": "Table not found"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "table_name": {
                                        "type": "string",
                                        "description": "Table name"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/admin/migrations": {
            "get": {
                "tags": [
                    "Migrations"
                ],
                "summary": "List all migrations",
                "description": "Retrieves a list of all database migrations and their status",
                "responses": {
                    "403": {
                        "description": "Permission denied"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/admin/migrations/pending": {
            "get": {
                "tags": [
                    "Migrations"
                ],
                "summary": "List pending migrations",
                "description": "Retrieves a list of all pending database migrations",
                "responses": {
                    "200": {
                        "description": "List of pending migrations",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "migrations": {
                                            "type": "array"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Permission denied"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/admin/jobs": {
            "get": {
                "tags": [
                    "Jobs"
                ],
                "summary": "List all scheduled jobs",
                "description": "Retrieves a list of all scheduled jobs and their status",
                "responses": {
                    "200": {
                        "description": "List of scheduled jobs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "jobs": {
                                            "type": "array"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Permission denied"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/admin/jobs/run-due": {
            "post": {
                "tags": [
                    "Jobs"
                ],
                "summary": "Run due jobs",
                "description": "Runs all jobs that are due to be executed",
                "responses": {
                    "200": {
                        "description": "Jobs executed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "executed": {
                                            "type": "array"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Permission denied"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/admin/jobs/run-all": {
            "post": {
                "tags": [
                    "Jobs"
                ],
                "summary": "Run all jobs",
                "description": "Runs all scheduled jobs regardless of their schedule",
                "responses": {
                    "200": {
                        "description": "Jobs executed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "executed": {
                                            "type": "array"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Permission denied"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/admin/jobs/run": {
            "post": {
                "tags": [
                    "Jobs"
                ],
                "summary": "Run specific job",
                "description": "Runs a specific job regardless of its schedule",
                "responses": {
                    "200": {
                        "description": "Job executed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "description": "Job ID"
                                        },
                                        "name": {
                                            "type": "string",
                                            "description": "Job name"
                                        },
                                        "status": {
                                            "type": "string",
                                            "description": "Execution status"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request format"
                    },
                    "403": {
                        "description": "Permission denied"
                    },
                    "404": {
                        "description": "Job not found"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "description": "Job ID"
                                    }
                                },
                                "required": [
                                    "id"
                                ]
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/admin/jobs/create-job": {
            "post": {
                "tags": [
                    "Jobs"
                ],
                "summary": "Create new job",
                "description": "Creates a new scheduled job",
                "responses": {
                    "201": {
                        "description": "Job created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "description": "Job ID"
                                        },
                                        "name": {
                                            "type": "string",
                                            "description": "Job name"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request format"
                    },
                    "403": {
                        "description": "Permission denied"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Job name"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/admin/configs": {
            "get": {
                "tags": [
                    "Configuration"
                ],
                "summary": "List all configuration files",
                "description": "Retrieves a list of all available configuration files",
                "responses": {
                    "200": {
                        "description": "List of configuration files",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "configs": {
                                            "type": "array"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Permission denied"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/admin/configs/{filename}": {
            "get": {
                "tags": [
                    "Configuration"
                ],
                "summary": "Get configuration file",
                "description": "Retrieves the contents of a specific configuration file",
                "responses": {
                    "200": {
                        "description": "Configuration file content",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "Config filename"
                                        },
                                        "content": {
                                            "type": "object",
                                            "description": "Configuration data"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Permission denied"
                    },
                    "404": {
                        "description": "Configuration file not found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "filename",
                        "in": "path",
                        "required": true,
                        "description": "Configuration filename",
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            },
            "put": {
                "tags": [
                    "Configuration"
                ],
                "summary": "Update configuration file",
                "description": "Updates the contents of a specific configuration file",
                "responses": {
                    "200": {
                        "description": "Configuration updated"
                    },
                    "400": {
                        "description": "Invalid configuration data"
                    },
                    "403": {
                        "description": "Permission denied"
                    },
                    "404": {
                        "description": "Configuration file not found"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "content": {
                                        "type": "object",
                                        "description": "Configuration data to update"
                                    }
                                },
                                "required": [
                                    "content"
                                ]
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "filename",
                        "in": "path",
                        "required": true,
                        "description": "Configuration filename",
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "/admin/configs/create": {
            "post": {
                "tags": [
                    "Configuration"
                ],
                "summary": "Create configuration file",
                "description": "Creates a new configuration file",
                "responses": {
                    "201": {
                        "description": "Configuration file created"
                    },
                    "400": {
                        "description": "Invalid request format"
                    },
                    "403": {
                        "description": "Permission denied"
                    },
                    "409": {
                        "description": "Configuration file already exists"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Config filename"
                                    },
                                    "content": {
                                        "type": "object",
                                        "description": "Configuration data"
                                    }
                                },
                                "required": [
                                    "name",
                                    "content"
                                ]
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/admin/permissions": {
            "get": {
                "tags": [
                    "Permissions"
                ],
                "summary": "List all permissions",
                "description": "Retrieves a list of all available permissions",
                "responses": {
                    "200": {
                        "description": "List of permissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "permissions": {
                                            "type": "array"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Permission denied"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/admin/permissions/create": {
            "post": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Create permission",
                "description": "Creates a new permission",
                "responses": {
                    "201": {
                        "description": "Permission created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "description": "Permission ID"
                                        },
                                        "name": {
                                            "type": "string",
                                            "description": "Permission name"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request format"
                    },
                    "403": {
                        "description": "Permission denied"
                    },
                    "409": {
                        "description": "Permission already exists"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Permission name"
                                    },
                                    "description": {
                                        "type": "string",
                                        "description": "Permission description"
                                    }
                                },
                                "required": [
                                    "name"
                                ]
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/admin/permissions/update": {
            "put": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Update permission",
                "description": "Updates an existing permission",
                "responses": {
                    "200": {
                        "description": "Permission updated"
                    },
                    "400": {
                        "description": "Invalid request format"
                    },
                    "403": {
                        "description": "Permission denied"
                    },
                    "404": {
                        "description": "Permission not found"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "description": "Permission ID"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/admin/permissions/assign-to-role": {
            "post": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Assign permissions to role",
                "description": "Assigns one or more permissions to a role",
                "responses": {
                    "200": {
                        "description": "Permissions assigned to role"
                    },
                    "400": {
                        "description": "Invalid request format"
                    },
                    "403": {
                        "description": "Permission denied"
                    },
                    "404": {
                        "description": "Role or permission not found"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "roleId": {
                                        "type": "integer",
                                        "description": "Role ID"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/admin/permissions/update-role-permissions": {
            "put": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Update role permissions",
                "description": "Updates the permissions assigned to a role",
                "responses": {
                    "200": {
                        "description": "Role permissions updated"
                    },
                    "400": {
                        "description": "Invalid request format"
                    },
                    "403": {
                        "description": "Permission denied"
                    },
                    "404": {
                        "description": "Role not found"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "roleId": {
                                        "type": "integer",
                                        "description": "Role ID"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/admin/roles/assign-to-user": {
            "post": {
                "tags": [
                    "Roles"
                ],
                "summary": "Assign roles to user",
                "description": "Assigns one or more roles to a user",
                "responses": {
                    "200": {
                        "description": "Roles assigned to user"
                    },
                    "400": {
                        "description": "Invalid request format"
                    },
                    "403": {
                        "description": "Permission denied"
                    },
                    "404": {
                        "description": "User or role not found"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userId": {
                                        "type": "integer",
                                        "description": "User ID"
                                    },
                                    "roleIds": {
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "userId",
                                    "roleIds"
                                ]
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/admin/roles/remove-user-roles": {
            "put": {
                "tags": [
                    "Roles"
                ],
                "summary": "Remove roles from user",
                "description": "Removes one or more roles from a user",
                "responses": {
                    "200": {
                        "description": "Roles removed from user"
                    },
                    "400": {
                        "description": "Invalid request format"
                    },
                    "403": {
                        "description": "Permission denied"
                    },
                    "404": {
                        "description": "User or role not found"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userId": {
                                        "type": "integer",
                                        "description": "User ID"
                                    },
                                    "roleIds": {
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "userId",
                                    "roleIds"
                                ]
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/admin/system/api-metrics": {
            "get": {
                "tags": [
                    "API Monitoring"
                ],
                "summary": "Get API metrics",
                "description": "Retrieves comprehensive metrics about API usage including endpoint performance,",
                "responses": {
                    "200": {
                        "description": "API metrics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "endpoints": {
                                            "type": "array"
                                        },
                                        "total_requests": {
                                            "type": "integer"
                                        },
                                        "avg_response_time": {
                                            "type": "number"
                                        },
                                        "error_rate": {
                                            "type": "number"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Permission denied"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/admin/system/api-metrics/reset": {
            "post": {
                "tags": [
                    "API Monitoring"
                ],
                "summary": "Reset API metrics",
                "description": "Resets all collected API metrics data",
                "responses": {
                    "200": {
                        "description": "API metrics reset successfully"
                    },
                    "403": {
                        "description": "Permission denied"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/admin/system/health": {
            "get": {
                "tags": [
                    "System Monitoring"
                ],
                "summary": "Get system health metrics",
                "description": "Retrieves comprehensive metrics about the system's health including PHP information,",
                "responses": {
                    "200": {
                        "description": "System health metrics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "php": {
                                            "type": "object"
                                        },
                                        "memory": {
                                            "type": "object"
                                        },
                                        "database": {
                                            "type": "object"
                                        },
                                        "file_system": {
                                            "type": "object"
                                        },
                                        "cache": {
                                            "type": "object"
                                        },
                                        "extensions": {
                                            "type": "object"
                                        },
                                        "server_load": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Permission denied"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "BearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "Operations related to Authentication"
        },
        {
            "name": "Database",
            "description": "Operations related to Database"
        },
        {
            "name": "Migrations",
            "description": "Operations related to Migrations"
        },
        {
            "name": "Jobs",
            "description": "Operations related to Jobs"
        },
        {
            "name": "Configuration",
            "description": "Operations related to Configuration"
        },
        {
            "name": "Permissions",
            "description": "Operations related to Permissions"
        },
        {
            "name": "Roles",
            "description": "Operations related to Roles"
        },
        {
            "name": "API Monitoring",
            "description": "Operations related to API Monitoring"
        },
        {
            "name": "System Monitoring",
            "description": "Operations related to System Monitoring"
        }
    ]
}