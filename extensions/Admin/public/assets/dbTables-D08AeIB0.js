import{ar as g,as as d}from"./index-CRsdYi2H.js";const f=g("dbTables",{state:()=>({tables:[],currentTable:null,tableData:[],tableColumns:[],columns:[],currentRecord:null,isLoading:!1,dbError:null,pagination:{page:1,per_page:25,total:0,lastPage:1,hasMore:!1,from:1,to:1},filters:{},sortBy:null,sortDirection:"asc",selectedRows:new Set,bulkActionMode:!1,availableActions:[{id:"bulk-update",label:"Update Selected",icon:"i-lucide-edit",variant:"primary",requiresModal:!0},{id:"bulk-delete",label:"Delete Selected",icon:"i-lucide-trash",variant:"danger",requiresModal:!0}]}),getters:{hasLoadedTables:e=>e.tables.length>0,getTableById:e=>a=>e.tables.find(t=>t.id===a||t.name===a),getCurrentTableColumns:e=>e.currentTable?e.currentTable.columns:[],getPaginatedData:e=>e.tableData,getRecordById:e=>a=>e.tableData.find(t=>t.id===a),selectedRowsCount:e=>e.selectedRows.size,hasSelectedRows:e=>e.selectedRows.size>0,isRowSelected:e=>a=>e.selectedRows.has(a),allRowsSelected:e=>e.tableData.length===0?!1:e.tableData.every(a=>e.selectedRows.has(a.id)),editableColumns:e=>e.tableColumns.filter(a=>a.name!=="id"&&a.name!=="created_at"&&a.name!=="updated_at"&&!a.auto_increment)},actions:{async fetchTables(){this.isLoading=!0,this.dbError=null;try{const e=await d.db.getTables();if(!e||e.success===!1){const a=(e==null?void 0:e.message)||"Failed to fetch tables",t=(e==null?void 0:e.code)||500;throw{message:a,code:t,data:(e==null?void 0:e.data)||[]}}return this.tables=e.data,e.data}catch(e){throw this.dbError=e.message||"An error occurred while fetching tables",e}finally{this.isLoading=!1}},async fetchForeignKeyData(e,a={}){try{const t=await d.db.getTableData(e,a);if(!t||t.success===!1){const i=(t==null?void 0:t.message)||`Failed to fetch FK data for table: ${e}`,s=(t==null?void 0:t.code)||500;throw{message:i,code:s,data:(t==null?void 0:t.data)||[]}}return{data:t.data,columns:t.columns||[],pagination:{page:t.current_page,per_page:t.per_page,total:t.total,lastPage:t.last_page,hasMore:t.has_more,from:t.from,to:t.to}}}catch(t){throw console.error(`Error fetching FK data for ${e}:`,t),t}},async fetchTableData(e,a={}){this.isLoading=!0,this.dbError=null,a.page&&(this.pagination.page=a.page),a.per_page&&(this.pagination.per_page=a.per_page);try{const t=await d.db.getTableData(e,a);if(!t||t.success===!1){const i=(t==null?void 0:t.message)||`Failed to fetch data for table: ${e}`,s=(t==null?void 0:t.code)||500;throw{message:i,code:s,data:(t==null?void 0:t.data)||[]}}return this.tableData=t.data,this.tableColumns=t.columns||[],this.pagination={page:t.current_page,per_page:t.per_page,total:t.total,lastPage:t.last_page,hasMore:t.has_more,from:t.from,to:t.to},{records:this.tableData,pagination:this.pagination}}catch(t){throw this.dbError=t.message||`An error occurred while fetching data for table: ${e}`,t}finally{this.isLoading=!1}},async createTableRow(e,a){this.isLoading=!0,this.dbError=null;try{const t=await d.db.createTableData(e,a);if(!t||t.success===!1){const i=(t==null?void 0:t.message)||`Failed to create record in table: ${e}`,s=(t==null?void 0:t.code)||500;throw{message:i,code:s,data:(t==null?void 0:t.data)||[]}}return await this.fetchTableData(e,{page:this.pagination.page,per_page:this.pagination.per_page}),t.data}catch(t){throw this.dbError=t.message||`An error occurred while creating record in table: ${e}`,t}finally{this.isLoading=!1}},async updateTableRow(e,a,t){this.isLoading=!0,this.dbError=null;try{const i=await d.db.updateTableData(e,a.toString(),t);if(console.log("Update response:",i),!i||i.success===!1){const s=(i==null?void 0:i.message)||`Failed to update record in table: ${e}`,c=(i==null?void 0:i.code)||500;throw{message:s,code:c,data:(i==null?void 0:i.data)||[]}}return await this.fetchTableData(e,{page:this.pagination.page,per_page:this.pagination.per_page}),i.data}catch(i){throw this.dbError=i.message||`An error occurred while updating record in table: ${e}`,i}finally{this.isLoading=!1}},async deleteTableRow(e,a){this.isLoading=!0,this.dbError=null;try{const t=await d.db.deleteTableData(e,a.toString());if(!t||t.success===!1){const i=(t==null?void 0:t.message)||`Failed to delete record from table: ${e}`,s=(t==null?void 0:t.code)||500;throw{message:i,code:s,data:(t==null?void 0:t.data)||[]}}return await this.fetchTableData(e,{page:this.pagination.page,per_page:this.pagination.per_page}),!0}catch(t){throw this.dbError=t.message||`An error occurred while deleting record from table: ${e}`,t}finally{this.isLoading=!1}},async fetchTableColumns(e){this.isLoading=!0,this.dbError=null;try{const a=await d.db.getTableColumns(e);if(!a||a.success===!1){const t=(a==null?void 0:a.message)||`Failed to fetch columns for table: ${e}`,i=(a==null?void 0:a.code)||500;throw{message:t,code:i,data:(a==null?void 0:a.data)||[]}}return this.columns=a.data,a.data}catch(a){throw this.dbError=a.message||`An error occurred while fetching columns for table: ${e}`,a}finally{this.isLoading=!1}},async createTable(e){this.isLoading=!0,this.dbError=null;try{const a=await d.db.createTable(e);if(!a||a.success===!1){const t=(a==null?void 0:a.message)||`Failed to create table: ${e.table_name}`,i=(a==null?void 0:a.code)||500;throw{message:t,code:i,data:(a==null?void 0:a.data)||[]}}return await this.fetchTables(),a}catch(a){throw this.dbError=a.message||`An error occurred while creating table: ${e.table_name}`,a}finally{this.isLoading=!1}},async updateTableSchema(e){this.isLoading=!0,this.dbError=null;try{if(!e.table_name)throw new Error("table_name is required in the request data");const a=await d.db.updateSchema(e);if(!a||a.success===!1){const t=(a==null?void 0:a.message)||`Failed to update schema for table: ${e.table_name}`,i=(a==null?void 0:a.code)||500;throw{message:t,code:i,data:(a==null?void 0:a.data)||[]}}return await this.fetchTableColumns(e.table_name),a}catch(a){throw this.dbError=a.message||`An error occurred while updating schema for table: ${e.table_name}`,a}finally{this.isLoading=!1}},async deleteTable(e){this.isLoading=!0,this.dbError=null;try{const a=await d.db.dropTable(e);if(!a||a.success===!1){const t=(a==null?void 0:a.message)||`Failed to delete table: ${e}`,i=(a==null?void 0:a.code)||500;throw{message:t,code:i,data:(a==null?void 0:a.data)||[]}}return await this.fetchTables(),a}catch(a){throw this.dbError=a.message||`An error occurred while deleting table: ${e}`,a}finally{this.isLoading=!1}},clearTableData(){this.tableData=[],this.currentRecord=null,this.pagination={page:1,per_page:25,total:0,lastPage:1,hasMore:!1,from:1,to:1},this.filters={},this.sortBy=null,this.sortDirection="asc"},resetState(){this.tables=[],this.currentTable=null,this.clearTableData(),this.dbError=null},async exportTableData(e){this.isLoading=!0,this.dbError=null;try{const a=await d.db.getTableData(e,{page:1,per_page:999999});if(!a||a.success===!1){const t=(a==null?void 0:a.message)||`Failed to export data from table: ${e}`,i=(a==null?void 0:a.code)||500;throw{message:t,code:i,data:(a==null?void 0:a.data)||[]}}return a.data||[]}catch(a){throw this.dbError=a.message||`An error occurred while exporting data from table: ${e}`,a}finally{this.isLoading=!1}},async bulkImportData(e,a,t){var i,s,c;this.isLoading=!0,this.dbError=null;try{const r=await d.db.bulkImport(e,{data:a,options:t});if(!r||r.success===!1){const l=(r==null?void 0:r.message)||`Failed to import data to table: ${e}`,o=(r==null?void 0:r.code)||500;throw{message:l,code:o,data:(r==null?void 0:r.data)||{}}}return await this.fetchTableData(e,{page:this.pagination.page,per_page:this.pagination.per_page}),{success:((i=r.data)==null?void 0:i.imported)||0,failed:((s=r.data)==null?void 0:s.failed)||0,errors:((c=r.data)==null?void 0:c.errors)||[]}}catch(r){throw this.dbError=r.message||`An error occurred while importing data to table: ${e}`,r}finally{this.isLoading=!1}},selectRow(e){this.selectedRows.add(e),this.bulkActionMode=this.selectedRows.size>0},unselectRow(e){this.selectedRows.delete(e),this.bulkActionMode=this.selectedRows.size>0},toggleRowSelection(e){this.selectedRows.has(e)?this.unselectRow(e):this.selectRow(e)},selectAllRows(){this.tableData.forEach(e=>{this.selectedRows.add(e.id)}),this.bulkActionMode=this.selectedRows.size>0},clearSelection(){this.selectedRows.clear(),this.bulkActionMode=!1},async bulkDeleteRecords(e,a){var i,s,c,r,l;const t=Array.from(this.selectedRows);if(t.length===0)throw new Error("No records selected for deletion");this.isLoading=!0,this.dbError=null;try{const o=await d.db.bulkDelete(e,t,a);if(!o||o.success===!1){const h=(o==null?void 0:o.message)||`Failed to delete records from table: ${e}`,n=(o==null?void 0:o.code)||500;throw{message:h,code:n,data:(o==null?void 0:o.data)||{}}}return this.clearSelection(),await this.fetchTableData(e,{page:this.pagination.page,per_page:this.pagination.per_page}),{deleted:(i=o.data)==null?void 0:i.deleted,soft_deleted:(s=o.data)==null?void 0:s.soft_deleted,ids:((c=o.data)==null?void 0:c.ids)||[],status_column:(r=o.data)==null?void 0:r.status_column,deleted_value:(l=o.data)==null?void 0:l.deleted_value}}catch(o){throw this.dbError=o.message||`An error occurred while deleting records from table: ${e}`,o}finally{this.isLoading=!1}},async bulkUpdateRecords(e,a){var i,s,c;const t=Array.from(this.selectedRows);if(t.length===0)throw new Error("No records selected for update");if(Object.keys(a).length===0)throw new Error("No fields selected for update");this.isLoading=!0,this.dbError=null;try{const r=await d.db.bulkUpdate(e,t,a);if(!r||r.success===!1){const l=(r==null?void 0:r.message)||`Failed to update records in table: ${e}`,o=(r==null?void 0:r.code)||500;throw{message:l,code:o,data:(r==null?void 0:r.data)||{}}}return this.clearSelection(),await this.fetchTableData(e,{page:this.pagination.page,per_page:this.pagination.per_page}),{updated:((i=r.data)==null?void 0:i.updated)||0,ids:((s=r.data)==null?void 0:s.ids)||[],data:((c=r.data)==null?void 0:c.data)||{}}}catch(r){throw this.dbError=r.message||`An error occurred while updating records in table: ${e}`,r}finally{this.isLoading=!1}},async previewSchemaChanges(e,a){this.isLoading=!0,this.dbError=null;try{const t=await d.db.previewSchemaChanges(e,a);if(!t||t.success===!1){const i=(t==null?void 0:t.message)||"Failed to preview schema changes",s=(t==null?void 0:t.code)||500;throw{message:i,code:s,data:(t==null?void 0:t.data)||{}}}return t.data}catch(t){throw this.dbError=t.message||"An error occurred while previewing schema changes",t}finally{this.isLoading=!1}},async exportSchema(e,a="json"){this.isLoading=!0,this.dbError=null;try{const t=await d.db.exportSchema(e,a);if(!t||t.success===!1){const i=(t==null?void 0:t.message)||`Failed to export schema for table: ${e}`,s=(t==null?void 0:t.code)||500;throw{message:i,code:s,data:(t==null?void 0:t.data)||{}}}return t.data}catch(t){throw this.dbError=t.message||`An error occurred while exporting schema for table: ${e}`,t}finally{this.isLoading=!1}},async importSchema(e,a,t="json",i={}){var s,c;this.isLoading=!0,this.dbError=null;try{const r=await d.db.importSchema(e,a,t,i);if(!r||r.success===!1){const l=(r==null?void 0:r.message)||`Failed to import schema for table: ${e}`,o=(r==null?void 0:r.code)||500;throw{message:l,code:o,data:(r==null?void 0:r.data)||{}}}return!i.validate_only&&((c=(s=r.data)==null?void 0:s.result)!=null&&c.success)&&await this.fetchTableColumns(e),r.data}catch(r){throw this.dbError=r.message||`An error occurred while importing schema for table: ${e}`,r}finally{this.isLoading=!1}},async getSchemaHistory(e,a){this.isLoading=!0,this.dbError=null;try{const t=await d.db.getSchemaHistory(e,a);if(!t||t.success===!1){const i=(t==null?void 0:t.message)||`Failed to get schema history for table: ${e}`,s=(t==null?void 0:t.code)||500;throw{message:i,code:s,data:(t==null?void 0:t.data)||{}}}return t.data}catch(t){throw this.dbError=t.message||`An error occurred while getting schema history for table: ${e}`,t}finally{this.isLoading=!1}},async revertSchemaChange(e,a=!1){this.isLoading=!0,this.dbError=null;try{const t=await d.db.revertSchemaChange(e,a);if(!t||t.success===!1){const i=(t==null?void 0:t.message)||"Failed to revert schema change",s=(t==null?void 0:t.code)||500;throw{message:i,code:s,data:(t==null?void 0:t.data)||{}}}return t.data}catch(t){throw this.dbError=t.message||"An error occurred while reverting schema change",t}finally{this.isLoading=!1}}},persist:{enabled:!0,strategies:[{storage:localStorage,paths:["pagination.per_page"]}]}});export{f as u};
